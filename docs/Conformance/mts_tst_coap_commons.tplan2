/******************************************************************************
* Copyright (c) 2018  Fraunhofer FOKUS
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     Sascha Hackel
******************************************************************************/

Package mts_tst_coap_commons {
	Domain {
		pics:
		- PIC_Server
		;
		entities:
		- IUT
		- client
		;
		events:
		- receives
		- sends
		- provide
		- responds
		- implement
		- times_out
		;
		event templates :
		- provideResource { the IUT entity provide a resource containing name indicating value DEFAULT_RESOURCE;}	
		;
		
	}
	Data {
		type STRING;
		type CODE; //CoAP code with pattern c.dd
		type PAYLOAD; //CoAP payload
		type UINT4; //4-bit integer
		type UINT16; //16-bit unsigned integer
		type OCT0_8; //8 byte octetstring
		type HEX; //hexadecimal number
			
		/* 
		 * Data representing module parameter.
		 * Will be set for every SUT appropriately.
		 */
		STRING DEFAULT_RESOURCE; //must implement at least the GET method
		STRING METHOD_NOT_ALLOWED_RESOURCE; //resource that doesn't implement METHOD
		STRING ANY_RESOURCE; //resource that is not available on IUT (note: may generate randomly)
		STRING NEW_RESOURCE; 
		STRING STORAGE_RESOURCE; //resource that allows creation via PUT or POST
		STRING DELETE_RESOURCE; //resource that allows the DELETE method
		STRING SECOND_LVL_RESOURCE;
		STRING SEPARATE_RESOURCE;
		STRING THIRD_LVL_RESOURCE;
		STRING DEFAULT_HOST;
		STRING DEFAULT_PORT;
		STRING PROXY_URI;
		STRING URI_HOST;
		STRING HTTP_URI;
		
		STRING DEFAULT_RESOURCE_CONTENT; //content of the default resource
		
		CODE METHOD_NOT_ALLOWED; //method that is not allowed by METHOD_NOT_ALLOWED_RESOURCE
		CODE PUT_OR_POST; //depending on implemented METHOD of STORAGE_RESOURCE, either PUT or POST
		
		UINT4 LENGTH_TOKEN; //length of the given TOKEN (0-8 bytes)
		UINT4 LENGTH_TOKEN_INVALID; //length not corresponding to actual TOKEN length 
		UINT4 LENGTH_TOKEN_RESERVED; //reserved value for token length (9-15 bytes)
		
		UINT16 MSG_ID1; //ID to match request and response. It is generated by the sender of a CON or NON message.
		UINT16 MSG_ID2;
		
		OCT0_8 TOKEN;
		
		HEX PAYLOAD_MARKER; //payload marker is 0xFF
		
		PAYLOAD EMPTY_PAYLOAD; //zero-length payload
	}	 
}